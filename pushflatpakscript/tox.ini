[tox]
envlist = docker

[testenv:docker]
whitelist_externals=docker
deps =
usedevelop = false
depends =
skip_install = true
commands =
    docker build --build-arg PYTHON_VERSION=3.8 --build-arg PYTHON_REQ_SUFFIX=.py38 -t pushflatpakscript-{envname}-py38-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v pushflatpakscript-{envname}-py38-tox:/app/.tox pushflatpakscript-{envname}-py38-test py38
    docker build --build-arg PYTHON_VERSION=3.9.7 -t pushflatpakscript-{envname}-py39-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v pushflatpakscript-{envname}-py39-tox:/app/.tox pushflatpakscript-{envname}-py39-test py39,check

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    py39: -rrequirements/test.txt
    py38: -rrequirements/test.py38.txt
    check: -rrequirements/test.txt

commands=
    {posargs:py.test --cov-config=tox.ini --cov-append --cov={toxinidir}/src/pushflatpakscript --cov-report term-missing tests}

[testenv:clean]
skip_install = true
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py39
parallel_show_output = true

[testenv:check]
skip_install = true
ignore_errors = true
commands =
    black --diff --check {toxinidir}
#    isort --check --diff {toxinidir}
    isort --check --diff {toxinidir}
    pip-compile-multi verify
    flake8 {toxinidir}
# Doesn't work without a .git in the same directory
#    check-manifest -v {toxinidir}

[testenv:coveralls]
deps=
    python-coveralls
    coverage
commands=
    coveralls

[flake8]
max-line-length = 160
exclude = .ropeproject,.tox,sandbox
show-source = True
# flake8 doesn't differentiate the use of `:` in dictionaries vs. slices,
# whereas # black formats the a later with surrounding whitespace. This causes
# flake8 to incorrecly report E203.
# See https://black.readthedocs.io/en/stable/the_black_code_style.html#slices
# W503 is a default ignore, but gets overridden when we set this, so we need
# to add it again ourselves.
ignore = E203,W503

[pytest]
norecursedirs = .tox .git .hg sandbox
python_files = test_*.py

[coverage:run]
branch = true
