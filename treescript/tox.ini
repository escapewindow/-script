[tox]
envlist = docker

[testenv:docker]
whitelist_externals=docker
deps =
usedevelop = false
depends =
skip_install = true
commands =
    docker build --build-arg PYTHON_VERSION=3.8 --build-arg PYTHON_REQ_SUFFIX=.py38 -t treescript-{envname}-py38-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}/../scriptworker_client:/scriptworker_client -v {toxinidir}:/app -v treescript-{envname}-py38-tox:/app/.tox treescript-{envname}-py38-test py38
    docker build --build-arg PYTHON_VERSION=3.9.7 -t treescript-{envname}-py39-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}/../scriptworker_client:/scriptworker_client -v {toxinidir}:/app -v treescript-{envname}-py39-tox:/app/.tox treescript-{envname}-py39-test py39,check

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps =
    # scriptworker_client needs to be available in docker
    -e {toxinidir}/../scriptworker_client
    -rrequirements/test.in
usedevelop = true
commands=
    {posargs:py.test --cov-config=tox.ini --cov-append --cov={toxinidir}/src/treescript --cov-report term-missing tests}

[testenv:clean]
skip_install = true
deps = coverage
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py39
parallel_show_output = true

[testenv:check]
skip_install = true
ignore_errors = true
commands =
    black --diff --check {toxinidir}
    isort --check --diff {toxinidir}
    pip-compile-multi verify
    flake8 {toxinidir} --per-file-ignores="tests/*:D,E203" --exclude=".ropeproject,.tox,sandbox,robustcheckout.py" --max-line-length="160" --show-source
    mypy src
# Doesn't work without a .git in the same directory
#    check-manifest -v {toxinidir}

[testenv:coveralls]
deps=
    coveralls
    coverage>=4.2b1
    -e {toxinidir}/../scriptworker_client
commands=
    coveralls

[pytest]
norecursedirs = .tox .git .hg sandbox
python_files = test_*.py
addopts = -vv -s --color=yes
